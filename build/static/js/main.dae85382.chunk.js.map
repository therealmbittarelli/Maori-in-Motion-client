{"version":3,"sources":["services/token-service.js","services/idle-service.js","config.js","services/auth-api-service.js","contexts/UserContext.js","contexts/ContentContext.js","components/Header/Header.js","components/PrivateRoute/PrivateRoute.js","components/PublicOnlyRoute/PublicOnlyRoute.js","components/Form/Form.js","components/Button/Button.js","components/RegistrationForm/RegistrationForm.js","routes/RegistrationRoute/RegistrationRoute.js","components/LoginForm/LoginForm.js","routes/LoginRoute/LoginRoute.js","components/Dashboard/WordsToPractice.js","routes/DashboardRoute/DashboardRoute.js","services/learning-service.js","components/Learning/Word.js","routes/LearningRoute/LearningRoute.js","routes/NotFoundRoute/NotFoundRoute.js","components/App/App.js","serviceWorker.js","index.js"],"names":["_timeoutId","config","TokenService","saveAuthToken","token","window","localStorage","setItem","getAuthToken","getItem","clearAuthToken","removeItem","hasAuthToken","parseJwt","jwt","jwtDecode","parseAuthToken","authToken","_getMsUntilExpiry","payload","exp","Date","now","queueCallbackBeforeExpiry","callback","msUntilExpiry","setTimeout","clearCallbackBeforeExpiry","clearTimeout","AuthApiService","postUser","user","fetch","concat","method","headers","content-type","body","JSON","stringify","then","res","ok","json","e","Promise","reject","postLogin","_ref","username","password","err","refreshToken","authorization","_idleCallback","_notIdleEvents","IdleService","setIdleCallback","idleCallback","resetIdleTimer","ev","regiserIdleTimerResets","forEach","event","document","addEventListener","unRegisterIdleResets","removeEventListener","UserContext","React","createContext","error","setError","clearError","setUser","processLogin","processLogout","UserProvider","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","console","setState","jwtPayload","id","user_id","name","sub","fetchRefreshToken","logoutBecauseIdle","idle","catch","state","inherits","createClass","key","value","_this2","react_default","a","createElement","Provider","children","Component","ContentContext","words","language","currentWord","correctCount","incorrectCount","nextWord","totalScore","setCurrentWord","setCorrectCount","setIncorrectCount","setNextWord","setTotalScore","ContentContextProvider","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","setContextStats","data","currentword","setWords","Header","handleLogoutClick","context","className","Link","onClick","to","renderLogoutLink","renderLoginLink","contextType","PrivateRoute","component","objectWithoutProperties","Route","assign","render","componentProps","contexts_UserContext","Consumer","userContext","contexts_ContentContext","content","Redirect","pathname","from","location","PublicOnlyRoute","Label","cx","Input","forwardRef","_ref2","ref","type","Required","_ref3","Button","RegistrationForm","firstInput","createRef","handleSubmit","preventDefault","_ev$target","target","onRegistrationSuccess","current","focus","onSubmit","role","htmlFor","required","components_Button_Button","defaultProps","RegistrationRoute","handleRegistrationSuccess","history","push","components_RegistrationForm_RegistrationForm","LoginForm","onLoginSuccess","LoginRoute","handleLoginSuccess","_this$props","destination","components_LoginForm_LoginForm","WordsToPractice","log","wordArr","wordArrToRender","i","original","correct_count","incorrect_count","renderWords","Context","DashboardRoute","getWords","total_score","Dashboard_WordsToPractice","LearningService","getWord","postGuess","guess","guessJson","url","Content-type","Authorization","Word","handleInput","currentGuess","postGuessHandler","tempSpace","wordCorrectCount","wordIncorrectCount","isCorrect","answer","setNextWordOnClick","onChange","bind","updateCounts","LearningRoute","handleSetState","Learning_Word","NotFoundRoute","App","hasError","components_Header_Header","Switch","exact","path","Boolean","hostname","match","ReactDOM","BrowserRouter","UserContext_UserProvider","ContentContext_ContentContextProvider","App_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dae85382.chunk.js","sourcesContent":["import jwtDecode from 'jwt-decode'\nimport config from '../config'\n\nlet _timeoutId\nconst _TEN_SECONDS_IN_MS = 10000\n\nconst TokenService = {\n  saveAuthToken(token) {\n    window.localStorage.setItem(config.TOKEN_KEY, token)\n  },\n  getAuthToken() {\n    return window.localStorage.getItem(config.TOKEN_KEY)\n  },\n  clearAuthToken() {\n    window.localStorage.removeItem(config.TOKEN_KEY)\n  },\n  hasAuthToken() {\n    return !!TokenService.getAuthToken()\n  },\n  parseJwt(jwt) {\n    return jwtDecode(jwt)\n  },\n  parseAuthToken() {\n    const authToken = TokenService.getAuthToken()\n    if (authToken)\n      return TokenService.parseJwt(authToken)\n    else\n      return undefined\n  },\n  _getMsUntilExpiry(payload) {\n    return (payload.exp * 1000) - Date.now()\n  },\n  queueCallbackBeforeExpiry(callback) {\n    const msUntilExpiry = TokenService._getMsUntilExpiry(\n      TokenService.parseAuthToken()\n    )\n    _timeoutId = setTimeout(callback, msUntilExpiry - _TEN_SECONDS_IN_MS)\n  },\n  clearCallbackBeforeExpiry() {\n    clearTimeout(_timeoutId)\n  },\n}\n\nexport default TokenService\n","\nlet _timeoutId\nlet _idleCallback = null\nlet _notIdleEvents = [\n  'mousedown',\n  'mousemove',\n  'keypress',\n  'scroll',\n  'touchstart',\n]\nconst _FIVE_MINUTES_IN_MS = 5 * 60 * 1000\n\nconst IdleService = {\n  setIdleCallback(idleCallback) {\n    _idleCallback = idleCallback\n  },\n  resetIdleTimer(ev) {\n    clearTimeout(_timeoutId)\n    _timeoutId = setTimeout(_idleCallback, _FIVE_MINUTES_IN_MS)\n  },\n  regiserIdleTimerResets() {\n    _notIdleEvents.forEach(event =>\n      document.addEventListener(\n        event,\n        IdleService.resetIdleTimer,\n        true,\n      )\n    )\n  },\n  unRegisterIdleResets() {\n    clearTimeout(_timeoutId)\n    _notIdleEvents.forEach(event =>\n      document.removeEventListener(\n        event,\n        IdleService.resetIdleTimer,\n        true,\n      )\n    )\n  },\n}\n\nexport default IdleService\n","export default {\n  API_ENDPOINT: 'https://frozen-peak-86835.herokuapp.com',\n  TOKEN_KEY: 'blogful-client-auth-token',\n}\n","import config from \"../config\";\nimport TokenService from \"./token-service\";\n\nconst AuthApiService = {\n  postUser(user) {\n    return fetch(`${config.API_ENDPOINT}/user`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then(res =>\n      !res.ok ? res.json().then(e => Promise.reject(e)) : res.json()\n    );\n  },\n  postLogin({ username, password }) {\n    return fetch(`${config.API_ENDPOINT}/auth/token`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({ username, password })\n    }).then(res =>\n      !res.ok ? res.json().then(err => Promise.reject(err)) : res.json()\n    );\n  },\n  refreshToken() {\n    return fetch(`${config.API_ENDPOINT}/auth/token`, {\n      method: \"PUT\",\n      headers: {\n        authorization: `Bearer ${TokenService.getAuthToken()}`\n      }\n    }).then(res =>\n      !res.ok ? res.json().then(e => Promise.reject(e)) : res.json()\n    );\n  }\n};\n\nexport default AuthApiService;\n","import React, { Component } from 'react'\nimport AuthApiService from '../services/auth-api-service'\nimport TokenService from '../services/token-service'\nimport IdleService from '../services/idle-service'\n\nconst UserContext = React.createContext({\n  user: {},\n  error: null,\n  setError: () => {},\n  clearError: () => {},\n  setUser: () => {},\n  processLogin: () => {},\n  processLogout: () => {},\n})\n\nexport default UserContext\n\nexport class UserProvider extends Component {\n  constructor(props) {\n    super(props)\n    const state = { user: {}, error: null }\n\n    const jwtPayload = TokenService.parseAuthToken()\n\n    if (jwtPayload)\n      state.user = {\n        id: jwtPayload.user_id,\n        name: jwtPayload.name,\n        username: jwtPayload.sub,\n      }\n\n    this.state = state;\n    IdleService.setIdleCallback(this.logoutBecauseIdle)\n  }\n\n  componentDidMount() {\n    if (TokenService.hasAuthToken()) {\n      IdleService.regiserIdleTimerResets()\n      TokenService.queueCallbackBeforeExpiry(() => {\n        this.fetchRefreshToken()\n      })\n    }\n  }\n\n  componentWillUnmount() {\n    IdleService.unRegisterIdleResets()\n    TokenService.clearCallbackBeforeExpiry()\n  }\n\n  setError = error => {\n    console.error(error)\n    this.setState({ error })\n  }\n\n  clearError = () => {\n    this.setState({ error: null })\n  }\n\n  setUser = user => {\n    this.setState({ user })\n  }\n\n  processLogin = authToken => {\n    TokenService.saveAuthToken(authToken)\n    const jwtPayload = TokenService.parseAuthToken()\n    this.setUser({\n      id: jwtPayload.user_id,\n      name: jwtPayload.name,\n      username: jwtPayload.sub,\n    })\n    IdleService.regiserIdleTimerResets()\n    TokenService.queueCallbackBeforeExpiry(() => {\n      this.fetchRefreshToken()\n    })\n  }\n\n  processLogout = () => {\n    TokenService.clearAuthToken()\n    TokenService.clearCallbackBeforeExpiry()\n    IdleService.unRegisterIdleResets()\n    this.setUser({})\n  }\n\n  logoutBecauseIdle = () => {\n    TokenService.clearAuthToken()\n    TokenService.clearCallbackBeforeExpiry()\n    IdleService.unRegisterIdleResets()\n    this.setUser({ idle: true })\n  }\n\n  fetchRefreshToken = () => {\n    AuthApiService.refreshToken()\n      .then(res => {\n        TokenService.saveAuthToken(res.authToken)\n        TokenService.queueCallbackBeforeExpiry(() => {\n          this.fetchRefreshToken()\n        })\n      })\n      .catch(err => {\n        this.setError(err)\n      })\n  }\n\n  render() {\n    const value = {\n      user: this.state.user,\n      error: this.state.error,\n      setError: this.setError,\n      clearError: this.clearError,\n      setUser: this.setUser,\n      processLogin: this.processLogin,\n      processLogout: this.processLogout,\n    }\n    return (\n      <UserContext.Provider value={value}>\n        {this.props.children}\n      </UserContext.Provider>\n    )\n  }\n}\n","import React, { Component } from 'react';\n// import config from '../config'\n// import TokenService from '../services/token-service'\n\nconst ContentContext = React.createContext({\n  // setActiveBand: () => { },\n  ///////////\n  words: [],\n  language: {},\n  error: null,\n  currentWord: 'here',\n  correctCount: 0,\n  incorrectCount: 0,\n  nextWord: 0,\n  totalScore: 0,\n  setCurrentWord: () => { },\n  setCorrectCount: () => { },\n  setIncorrectCount: () => { },\n  setNextWord: () => { },\n  setTotalScore: () => { }\n\n});\n\nexport default ContentContext;\n\nexport class ContentContextProvider extends Component {\n  state = {\n    // bandsList: [],\n    // error: null,\n    // bandMembers: [],\n    // activeUser: '',\n    // activeBand: '',\n    // usersBands: [],\n    // bandSetlists: [],\n    // bandRepertoire: [],\n    // selectedSetlist: {},\n    // loggedIn: null,\n    /////////\n    words: [],\n    language: {},\n    error: null,\n    currentWord: 'here',\n    correctCount: 0,\n    incorrectCount: 0,\n    nextWord: 0,\n    totalScore: 0\n  };\n\n  // setContext = () => {\n  //   this.getLanguage().then((resData) => this.setState({\n  //     error: null,\n  //     language: resData.language,\n  //     words: resData.words\n  //   }));\n  //   LanguageService.getHead().then((resData) => this.setState({\n  //     head: resData\n  //   }))\n  // }\n\n  // getLanguage = () => {\n  //   return fetch(`${config.API_ENDPOINT}/language`, {\n  //     method: 'GET',\n  //     headers: {\n  //       'content-type': 'application/json',\n  //       'authorization': `Bearer ${TokenService.getAuthToken()}`\n  //     }\n  //   })\n  //     .then(res => res.json())\n  //     .then(response => response);\n  // }\n\n  setContextStats = (data) => {\n    this.setState({\n      currentword: data.currentWord,\n      correctCount: data.correctCount,\n      incorrectCount: data.incorrectCount,\n      nextWord: data.nextWord,\n      totalScore: data.totalScore\n    })\n  }\n\n  setWords = (words) => {\n    this.setState({\n      words\n    })\n  }\n\n  // setCurrentWord = (word) => {\n  //   console.log('in context, setcurrent word is', word);\n  //   this.setState({\n  //     currentWord: word.original\n  //   })\n  // }\n\n  // setCorrectCount = (word) => {\n  //   console.log('in context, setcorrectcount word is', word);\n\n  //   this.setState({\n  //     correctCount: word.correct_count\n  //   })\n  // }\n\n  // setIncorrectCount = (word) => {\n  //   console.log('in context, setincorrect word is', word);\n\n  //   this.setState({\n  //     incorrectCount: word.incorrect_count\n  //   })\n  // }\n\n  // setNextWord = (word) => {\n  //   console.log('in context, setnextword word is', word);\n\n  //   this.setState({\n  //     nextWord: word.next\n  //   })\n  // }\n  // setTotalScore = (word) => {\n  //   console.log('in context, settotalscore word is', word);\n\n  //   this.setState({\n  //     word: word.total_score\n  //   })\n  // }\n\n  // async componentDidMount() {\n  //   let res = await this.getWordsAndLanguage();\n  //   this.setState({\n  //     words: res.words,\n  //     language: res.language,\n  //     error: null\n  //   });\n  //   console.log(this.state);\n  // }\n\n  // getWordsAndLanguage = () => {\n  //   console.log('hit it')\n  //   return fetch(`${config.API_ENDPOINT}/language`, {\n  //     method: 'GET',\n  //     headers: {\n  //       'content-type': 'application/json',\n  //       'authorization': `Bearer ${TokenService.getAuthToken()}`\n  //     }\n  //   })\n  //     .then(res => res.json())\n  //     .then(response => {\n  //       console.log('res is', response);\n  //       return response\n  //     }\n  //     );\n  // }\n\n\n\n  // setBandsList = (bandsList) => {\n  //   this.setState({ bandsList })\n  // }\n\n  // setBandMembers = (bandMembers) => {\n  //   this.setState({ bandMembers })\n  // }\n\n  // setActiveBand = (bandId) => {\n  //   this.setState({ activeBand: bandId })\n  // }\n\n\n  render() {\n    const value = {\n      words: this.state.words,\n      language: this.state.language,\n      error: this.state.error,\n      currentWord: this.state.currentWord,\n      correctCount: this.state.correctCount,\n      incorrectCount: this.state.incorrectCount,\n      nextWord: this.state.nextWord,\n      totalScore: this.state.totalScore,\n      setWords: this.setWords,\n      setCurrentWord: this.setCurrentWord,\n      setCorrectCount: this.setCorrectCount,\n      setIncorrectCount: this.setIncorrectCount,\n      setNextWord: this.setNextWord,\n      setTotalScore: this.setTotalScore\n    }\n    return (\n      <ContentContext.Provider value={value}>\n        {this.props.children}\n      </ContentContext.Provider>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport TokenService from \"../../services/token-service\";\nimport UserContext from \"../../contexts/UserContext\";\nimport \"./Header.css\";\n\nclass Header extends Component {\n  static contextType = UserContext;\n\n  handleLogoutClick = () => {\n    this.context.processLogout();\n  };\n\n  renderLogoutLink() {\n    return (\n      <div>\n        <nav className=\"log-out-user\">\n          <div className=\"logged-in-user\">{this.context.user.name}</div>\n          <Link\n            className=\"log-out-user-link\"\n            onClick={this.handleLogoutClick}\n            to=\"/login\"\n          >\n            Logout\n          </Link>\n        </nav>\n      </div>\n    );\n  }\n\n  renderLoginLink() {\n    return (\n      <nav className=\"heading login-page-heading\">\n        <Link className=\"heading login-page-login\" to=\"/login\">\n          Login\n        </Link>{\" \"}\n        <Link className=\"heading login-page-register\" to=\"/register\">\n          Sign up\n        </Link>\n      </nav>\n    );\n  }\n\n  render() {\n    return (\n      <header>\n        <h1 className=\"heading login-page-header\">\n          <Link className=\"heading login-page-link\" to=\"/login\">\n            Spaced repetition\n          </Link>\n        </h1>\n        {TokenService.hasAuthToken()\n          ? this.renderLogoutLink()\n          : this.renderLoginLink()}\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport UserContext from '../../contexts/UserContext'\nimport ContentContext from '../../contexts/ContentContext'\n\n\n\nexport default function PrivateRoute({ component, ...props }) {\n  const Component = component\n  return (\n    <Route\n      {...props}\n      render={componentProps => (\n        <UserContext.Consumer>\n          {userContext =>\n            <ContentContext.Consumer>\n              {content => (\n\n                !!userContext.user.id\n                  ? <Component {...componentProps} user={userContext} content={content} />\n                  : (\n                    <Redirect\n                      to={{\n                        pathname: userContext.user.idle ? '/login' : '/register',\n                        state: { from: componentProps.location },\n                      }}\n                    />\n                  )\n              )\n              }\n            </ContentContext.Consumer>\n          }\n        </UserContext.Consumer>\n      )}\n    />\n  )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport UserContext from '../../contexts/UserContext'\n\nexport default function PublicOnlyRoute({ component, ...props }) {\n  const Component = component\n  return (\n    <Route\n      {...props}\n      render={componentProps => (\n        <UserContext.Consumer>\n          {userContext =>\n            !!userContext.user.id\n              ? <Redirect to={'/'} />\n              : <Component {...componentProps} />\n          }\n        </UserContext.Consumer>\n      )}\n    />\n  )\n}\n","import React from 'react'\nimport cx from 'classnames'\nimport './Form.css'\n\nexport function Label({ className, ...props }) {\n  return (\n    <label className={cx('Label', className)} {...props} />\n  )\n}\n\nexport const Input =  React.forwardRef(({ className, ...props }, ref) => {\n  return (\n    <input className={cx('Input', className)} type='text' ref={ref} {...props} />\n  )\n})\n\nexport function Required({ className, ...props }) {\n  return (\n    <span className={cx('Required', className)} {...props}>\n      &#42;\n    </span>\n  )\n}\n\nexport function Textarea({ className, ...props }) {\n  return (\n    <textarea className={cx('Textarea', className)} {...props} />\n  )\n}\n","import React from 'react'\nimport cx from 'classnames'\nimport './Button.css'\n\nconst Button = React.forwardRef(({ className, ...props }, ref) => {\n  return (\n    <button className={cx('Button', className)} ref={ref} {...props} />\n  )\n})\n\nexport default Button\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Input, Required, Label } from \"../Form/Form\";\nimport AuthApiService from \"../../services/auth-api-service\";\nimport Button from \"../Button/Button\";\nimport \"./RegistrationForm.css\";\n\nclass RegistrationForm extends Component {\n  static defaultProps = {\n    onRegistrationSuccess: () => {}\n  };\n\n  state = { error: null };\n\n  firstInput = React.createRef();\n\n  handleSubmit = ev => {\n    ev.preventDefault();\n    const { name, username, password } = ev.target;\n    AuthApiService.postUser({\n      name: name.value,\n      username: username.value,\n      password: password.value\n    })\n      .then(user => {\n        name.value = \"\";\n        username.value = \"\";\n        password.value = \"\";\n        this.props.onRegistrationSuccess();\n      })\n      .catch(res => {\n        this.setState({ error: res.error });\n      });\n  };\n\n  componentDidMount() {\n    this.firstInput.current.focus();\n  }\n\n  render() {\n    const { error } = this.state;\n    return (\n      <form id=\"sign-up-form\" onSubmit={this.handleSubmit}>\n        <div role=\"alert\">{error && <p>{error}</p>}</div>\n        <section id=\"sign-up-container\">\n          <div>\n            <Label className=\"name-label\" htmlFor=\"registration-name-input\">\n              Enter your name\n              <Required />\n            </Label>\n            <br />\n            <Input\n              ref={this.firstInput}\n              id=\"registration-name-input\"\n              className=\"name-input\"\n              name=\"name\"\n              required\n            />\n          </div>\n          <div>\n            <Label htmlFor=\"registration-username-input\">\n              Choose a username\n              <Required />\n            </Label>\n            <br />\n            <Input id=\"registration-username-input\" name=\"username\" required />\n          </div>\n          <div>\n            <Label htmlFor=\"registration-password-input\">\n              Choose a password\n              <Required />\n            </Label>\n            <br />\n            <Input\n              id=\"registration-password-input\"\n              name=\"password\"\n              type=\"password\"\n              required\n            />\n          </div>\n        </section>\n        <footer>\n          <Button id=\"sign-up-button\" type=\"submit\">\n            Sign up\n          </Button>{\" \"}\n          <br />\n          <Link className=\"already-have-an-account-link\" to=\"/login\">\n            Already have an account?\n          </Link>\n        </footer>\n      </form>\n    );\n  }\n}\n\nexport default RegistrationForm;\n","import React, { Component } from \"react\";\nimport RegistrationForm from \"../../components/RegistrationForm/RegistrationForm\";\n\nclass RegistrationRoute extends Component {\n  static defaultProps = {\n    history: {\n      push: () => {}\n    }\n  };\n\n  handleRegistrationSuccess = () => {\n    const { history } = this.props;\n    history.push(\"/login\");\n  };\n\n  render() {\n    return (\n\n      <section id=\"sign-up-heading-container\">\n        <h2 id=\"sign-up-heading\">Sign up</h2>\n        <p id=\"sign-up-desc\">\n          Practice learning a language with the spaced repetition revision\n          technique.\n        </p>\n        <RegistrationForm\n          onRegistrationSuccess={this.handleRegistrationSuccess}\n        />\n      </section>\n    );\n  }\n}\n\nexport default RegistrationRoute;\n","import React, { Component } from \"react\";\nimport { Input, Label } from \"../Form/Form\";\nimport AuthApiService from \"../../services/auth-api-service\";\nimport UserContext from \"../../contexts/UserContext\";\nimport Button from \"../Button/Button\";\n\nclass LoginForm extends Component {\n  static defaultProps = {\n    onLoginSuccess: () => {}\n  };\n\n  static contextType = UserContext;\n\n  state = { error: null };\n\n  firstInput = React.createRef();\n\n  handleSubmit = ev => {\n    ev.preventDefault();\n    const { username, password } = ev.target;\n\n    this.setState({ error: null });\n\n    AuthApiService.postLogin({\n      username: username.value,\n      password: password.value\n    })\n      .then(res => {\n        username.value = \"\";\n        password.value = \"\";\n        this.context.processLogin(res.authToken);\n        this.props.onLoginSuccess();\n      })\n      .catch(res => {\n        this.setState({ error: res.error });\n      });\n  };\n\n  componentDidMount() {\n    this.firstInput.current.focus();\n  }\n\n  render() {\n    const { error } = this.state;\n    return (\n      <form className=\"LoginForm heading\" onSubmit={this.handleSubmit}>\n        <div role=\"alert\">{error && <p>{error}</p>}</div>\n        <div>\n          <Label\n            className=\"heading login-page-username\"\n            htmlFor=\"login-username-input\"\n          >\n            Username\n          </Label>\n          <Input\n            ref={this.firstInput}\n            id=\"login-username-input\"\n            name=\"username\"\n            required\n          />\n        </div>\n        <br></br>\n        <div>\n          <Label\n            className=\"heading login-page-password\"\n            htmlFor=\"login-password-input\"\n          >\n            Password\n          </Label>\n          <Input\n            id=\"login-password-input\"\n            name=\"password\"\n            type=\"password\"\n            required\n          />\n        </div>\n        <br></br>\n        <Button className=\"heading login-page-submit\" type=\"submit\">\n          Login\n        </Button>\n      </form>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React, { Component } from \"react\";\nimport LoginForm from \"../../components/LoginForm/LoginForm\";\n\nclass LoginRoute extends Component {\n  static defaultProps = {\n    location: {},\n    history: {\n      push: () => {}\n    }\n  };\n\n  handleLoginSuccess = () => {\n    const { location, history } = this.props;\n    const destination = (location.state || {}).from || \"/\";\n    history.push(destination);\n  };\n\n  render() {\n    return (\n      <section>\n        <h2 className=\"heading login-page-login-h2\">Login</h2>\n        <LoginForm onLoginSuccess={this.handleLoginSuccess} />\n      </section>\n    );\n  }\n}\n\nexport default LoginRoute;\n","import React, { Component } from \"react\";\nimport Context from \"../../contexts/ContentContext\";\n// import DashboardService from '../../services/dashboard-service';\nimport \"../../routes/DashboardRoute/DashboardRoute.css\";\n\nclass WordsToPractice extends Component {\n  static contextType = Context;\n  static defaultProps = {\n    // context: {},\n    // user: {}\n    words: []\n  };\n\n  renderWords() {\n    console.log('key is', this.props.words)\n    let wordArr = this.props.words;\n    let wordArrToRender = [];\n    for (let i = 0; i < wordArr.length; i++) {\n      wordArrToRender.push(\n        <li key={this.props.words[i].id} className=\"dashboard-individual-word-container\">\n          <h4 className=\"word-dashboard\">{wordArr[i].original}</h4>\n          correct answer count: {wordArr[i].correct_count}\n            <br />\n          incorrect answer count: {wordArr[i].incorrect_count}\n            <br></br>\n          <h4 className=\"attempts-dashboard\">\n\n            <p>{console.log(\"wordarrtorender\", wordArrToRender)}</p>\n            <p>{console.log(\"words to practice\", this.words)}</p>\n            {/* current score: {wordArr[i].total_score} */}\n          </h4>\n        </li>\n      );\n    }\n\n    console.log(wordArr);\n    console.log(\"wordarrtorender\", wordArrToRender);\n    return wordArrToRender;\n  }\n\n  render() {\n    // console.log('user context: ', this.props.user);\n    // console.log('context context: ', this.props.context);\n    return (\n      <section id=\"words-to-practice-container\">\n        <ul>\n          <div id=\"list-of-words-and-attempts\">{this.renderWords()}</div>\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport default WordsToPractice;\n","import React, { Component } from \"react\";\nimport WordsToPractice from \"../../components/Dashboard/WordsToPractice\";\nimport UserContext from \"../../contexts/UserContext\";\n// import Context from '../../contexts/Context';\nimport { Link } from \"react-router-dom\";\nimport config from \"../../config\";\nimport TokenService from \"../../services/token-service\";\n\nclass DashboardRoute extends Component {\n  state = {\n    words: [],\n    totalScore: null,\n    language: \"\",\n    key: null\n  };\n\n  static contextType = UserContext;\n\n  componentDidMount() {\n    this.getWords();\n  }\n\n  getWords() {\n    return fetch(`${config.API_ENDPOINT}/language`, {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json\",\n        authorization: `Bearer ${TokenService.getAuthToken()}`\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(\"data is\", data);\n        this.setState({\n          words: data.words,\n          totalScore: data.language.total_score,\n          language: data.language.name,\n          key: data.words.id\n        });\n      });\n  }\n\n  render() {\n    let words = this.state.words;\n    let key = this.state.key;\n    console.log(\"totalscore is\", this.state.totalScore);\n    console.log(\"words is\", words);\n    console.log(\"look at dashboard line 46+ for text fixing\");\n\n    return (\n      <section>\n        <section id=\"dashboard-container\">\n          <h2 id=\"welcome-message\">\n            {this.context.user.name} is learning {this.state.language}!\n            <p id=\"total-score-dashboard\">\n              Total correct answers: {this.state.totalScore}\n            </p>\n          </h2>\n          <Link to=\"/learn\" id=\"button-lets-learn\" type=\"submit\">\n            <div id=\"learn-button-text\">Start practicing</div>\n          </Link>\n          <h3 id=\"words-header-dashboard\">Words to practice</h3>\n          <WordsToPractice words={words} id={key} />\n\n          <section className=\"stats\"></section>\n        </section>\n      </section>\n    );\n  }\n}\n\nexport default DashboardRoute;\n","import config from \"../config\";\nimport TokenService from \"./token-service\";\n\nconst LearningService = {\n  getWords() {\n    return fetch(`${config.API_ENDPOINT}/language`, {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json\",\n        authorization: `Bearer ${TokenService.getAuthToken()}`\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(\"data is\", data);\n        this.setState({\n          words: data.words,\n          totalScore: data.language.total_score\n        });\n      });\n  },\n\n  getWord() {\n    return fetch(`${config.API_ENDPOINT}/language/head`, {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json\",\n        authorization: `Bearer ${TokenService.getAuthToken()}`\n      }\n    }).then(res =>\n      !res.ok ? res.json().then(e => Promise.reject(e)) : res.json()\n    );\n  },\n\n  postGuess(guess) {\n    const authToken = TokenService.getAuthToken();\n    const guessJson = JSON.stringify({\n      guess: guess\n    });\n    const url = `${config.API_ENDPOINT}/language/guess`;\n\n    return fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${authToken}`\n      },\n      body: guessJson\n    }).then(res =>\n      !res.ok ? res.json().then(e => Promise.reject(e)) : res.json()\n    );\n  }\n};\n\nexport default LearningService;\n","import React, { Component } from \"react\";\n// import ContentContext from \"../../contexts/ContentContext\";\n// import LearningService from '../../services/learning-service';\nimport LearningService from \"../../services/learning-service\";\nimport Button from \"../Button/Button\";\nimport { Link } from \"react-router-dom\";\n// import Result from \"./Result\";\n// import config from \"../../config\";\n// import TokenService from \"../../services/token-service\";\n// import WordsToPracice from \"../Dashboard/WordsToPractice\";\n\nclass Word extends Component {\n  // static contextType = ContentContext;\n\n  // static defaultProps = {\n  //   nextWord: \"\",\n  //   wordCorrectCount: 0,\n  //   wordIncorrectCount: 0,\n  //   totalScore: 0\n  // };\n  constructor(props) {\n    super(props);\n\n    // this.state.currentWord = this.props.nextWord;\n    // this.state.nextWord = this.props.nextWord;\n    // this.state.wordCorrectCount = this.props.wordCorrectCount;\n    // this.state.wordIncorrectCount = this.props.wordIncorrectCount;\n    // this.state.totalScore = this.props.totalScore;\n    this.state = {\n      currentWord: \"\",\n      isCorrect: null,\n      wordCorrectCount: this.props.wordCorrectCount,\n      wordIncorrectCount: this.props.wordIncorrectCount,\n      totalScore: this.props.totalScore,\n      nextWord: this.props.nextWord,\n      currentGuess: \"\",\n      answer: null\n    };\n\n    this.tempSpace = {\n      wordCorrectCount: 0,\n      wordIncorrectCount: 0\n    }\n  }\n\n\n  handleInput = e => {\n    e.preventDefault();\n    this.setState({\n      currentGuess: e.target.value\n    });\n  };\n\n\n\n\n  postGuessHandler = e => {\n    e.preventDefault();\n    console.log('props is', this.props);\n    const guess = this.state.currentGuess;\n\n    LearningService.postGuess(guess).then(data => {\n      console.log(\"data is post\", data);\n      // this.handleSetState(data);\n      this.tempSpace.wordCorrectCount = data.wordCorrectCount;\n      this.tempSpace.wordIncorrectCount = data.wordIncorrectCount;\n\n      this.setState({\n        isCorrect: data.isCorrect,\n        totalScore: data.totalScore,\n        nextWord: data.nextWord,\n        answer: data.answer\n      });\n\n      if (this.state.isCorrect === true) {\n        this.setState({\n          wordCorrectCount: this.state.wordCorrectCount + 1,  // incremeting here for interface, but also incrementing on the server-side and saving to DB so that the updated score persists\n        })\n      } else {\n        this.setState({\n          wordIncorrectCount: this.state.wordIncorrectCount + 1,  // incremeting here for interface, but also incrementing on the server-side and saving to DB so that the updated score persists\n        })\n      }\n    });\n  };\n\n\n  setNextWordOnClick = () => {\n    //   LearningService.getWord()\n    console.log('on second click, this.state.nextword is', this.state.nextWord);\n    this.setState({\n      isCorrect: null,\n      wordCorrectCount: this.tempSpace.wordCorrectCount,\n      wordIncorrectCount: this.tempSpace.wordIncorrectCount\n    });\n\n    console.log('this state is', this.state)\n  }\n\n\n  render() {\n    console.log('uuuuugh', this.state.currentWord, this.state.nextWord);\n    return (\n      <section id=\"translate-page-container\">\n        <div className=\"learning_stats\">\n          <h4 className=\"learning_correct\">\n            You have answered this word correctly {this.state.wordCorrectCount}{\" \"}\n            times.\n          </h4>\n          <h4 className=\"learning_incorrect\">\n            You have answered this word incorrectly{\" \"}\n            {this.state.wordIncorrectCount} times.\n          </h4>\n        </div>\n        <section className=\"DisplayScore\">\n          <p>Your total score is: {this.state.totalScore}</p>\n        </section>\n\n        {this.state.isCorrect === true && (\n          <section id=\"correct-answer-feedback\" className=\"DisplayFeedback\">\n            <h2>You were correct! :D</h2>\n            <p>\n              The correct translation for {this.state.currentWord} was{\" \"}\n              {this.state.answer} and you chose {this.state.currentGuess}!\n            </p>\n          </section>\n        )}\n        {this.state.isCorrect === false && (\n          <section id=\"incorrect-answer-feedback\" className=\"DisplayFeedback\">\n            <h2>Good try, but not quite right :(</h2>\n            <p>\n              The correct translation for {this.state.currentWord} was{\" \"}\n              {this.state.answer} and you chose {this.state.currentGuess}!\n            </p>\n          </section>\n        )}\n\n        {this.state.isCorrect === null && (\n          <form id=\"translation-guess-form\" onSubmit={(e) => {\n            this.setState({\n              currentWord: this.state.nextWord\n            });\n            return this.postGuessHandler(e);\n          }}>\n            <h2>Translate the word:</h2> <span>{this.state.nextWord}</span>\n            <label htmlFor=\"learn-guess-input\">\n              <p>What's the translation for this word?</p>\n            </label>\n            <input\n              type=\"text\"\n              name=\"guess\"\n              required\n              onChange={this.handleInput.bind(this)}\n              id=\"learn-guess-input\"\n            ></input>\n            <Button id=\"button-show-form\" type=\"submit\" onClick={this.updateCounts}>\n              Submit your answer\n            </Button>\n          </form>\n        )}\n        {this.state.isCorrect !== null && (\n          <Button\n            id=\"button-show-form\"\n            type=\"submit\"\n            onClick={this.setNextWordOnClick}\n          >\n            Try another word!\n          </Button>\n        )}\n\n        <Link to=\"/\" className=\"button-to-dashboard\" type=\"submit\">\n          <div className=\"button-to-dashboard-text\">Dashboard</div>\n        </Link>\n      </section>\n    );\n  }\n}\n\nexport default Word;\n","import React, { Component } from \"react\";\nimport Word from \"../../components/Learning/Word\";\n// import config from \"../../config\";\nimport LearningService from \"../../services/learning-service\";\nimport ContentContext from \"../../contexts/ContentContext\";\n// import \"../../routes/DashboardRoute/DashboardRoute.css\";\nimport \"../../components/Learning/Learning.css\";\n\nclass LearningRoute extends Component {\n  state = {\n    wordCorrectCount: 0,\n    wordIncorrectCount: 0,\n    nextWord: \"\",\n    totalScore: 0\n  };\n\n  static contextType = ContentContext;\n\n  componentDidMount() {\n    LearningService.getWord()\n      .then(data => {\n        console.log(\"data learning is\", data);\n        this.handleSetState(data);\n      })\n    // .then(() => {\n    // this.getWord();\n    //})\n\n  }\n\n  handleSetState = data => {\n    return this.setState({\n      nextWord: data.nextWord,\n      wordCorrectCount: data.wordCorrectCount,\n      wordIncorrectCount: data.wordIncorrectCount,\n      totalScore: data.totalScore\n    });\n  };\n\n  getWord() {\n    console.log(\n      \"this.state.wordcorrectcount in learning route is\",\n      this.state.wordCorrectCount\n    );\n    if (this.state.nextWord !== \"\") {\n      return (\n        <section>\n          <Word\n            nextWord={this.state.nextWord}\n            wordCorrectCount={this.state.wordCorrectCount}\n            wordIncorrectCount={this.state.wordIncorrectCount}\n            totalScore={this.state.totalScore}\n          />\n        </section>\n      );\n    }\n    return <div></div>;\n  }\n\n  render() {\n    return <section>{this.getWord()}</section>;\n  }\n}\n\nexport default LearningRoute;\n","import React, { Component } from 'react'\n\nclass NotFoundRoute extends Component {\n  render() {\n    return (\n      <section>\n        <h2>404 - Page not found</h2>\n        <p>Try going back to your previous page.</p>\n      </section>\n    );\n  }\n}\n\nexport default NotFoundRoute\n","import React, { Component } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport Header from '../Header/Header'\nimport PrivateRoute from '../PrivateRoute/PrivateRoute'\nimport PublicOnlyRoute from '../PublicOnlyRoute/PublicOnlyRoute'\nimport RegistrationRoute from '../../routes/RegistrationRoute/RegistrationRoute'\nimport LoginRoute from '../../routes/LoginRoute/LoginRoute'\nimport DashboardRoute from '../../routes/DashboardRoute/DashboardRoute'\nimport LearningRoute from '../../routes/LearningRoute/LearningRoute'\nimport NotFoundRoute from '../../routes/NotFoundRoute/NotFoundRoute'\nimport './App.css'\n\nexport default class App extends Component {\n  state = { hasError: false }\n\n  static getDerivedStateFromError(error) {\n    console.error(error)\n    return { hasError: true }\n  }\n\n  render() {\n    const { hasError } = this.state\n    return (\n      <div className='App'>\n        <Header />\n        <main>\n          {hasError && (\n            <p>There was an error! Oh no!</p>\n          )}\n          <Switch>\n            <PrivateRoute\n              exact\n              path={'/'}\n              component={DashboardRoute}\n            />\n            <PrivateRoute\n              path={'/learn'}\n              component={LearningRoute}\n            />\n            <PublicOnlyRoute\n              path={'/register'}\n              component={RegistrationRoute}\n            />\n            <PublicOnlyRoute\n              path={'/login'}\n              component={LoginRoute}\n            />\n            <Route\n              component={NotFoundRoute}\n            />\n          </Switch>\n        </main>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'unfetch/polyfill'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { UserProvider } from './contexts/UserContext'\nimport { ContentContextProvider } from './contexts/ContentContext'\nimport App from './components/App/App'\nimport './setup-icons'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <BrowserRouter>\n    <UserProvider>\n      <ContentContextProvider>\n        <App />\n      </ContentContextProvider>\n    </UserProvider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}